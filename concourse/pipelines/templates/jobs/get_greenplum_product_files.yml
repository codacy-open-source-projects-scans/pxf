{# Template for copying GPDB release packages from the prod GCS release bucket
 #
 # Expects a dictionary with the name 'x' to be set as defined in macros.j2 file (for_each_gp_ver)
 # Required attributes:
 #   - attempts        : number of times to attempt downloading product files before failing
 #   - gp_ver          : Greenplum major version
 #   - gp_num_versions : number of previous release of Greenplum (minor or mainteance) for this Greenplum major version to download
 #   - platforms       : list of Greenplum platforms to download for this Greenplum major version
 #}

- name: get_greenplum_product_files_gp[[x.gp_ver]]
  plan:
  - in_parallel:
    - get: twice-a-day
      trigger: true
    - get: pxf_src
      resource: pxf-src
    - get: google-cloud-sdk-slim-image
  - in_parallel:
    {% for i in range(x.gp_num_versions) | reverse %}
    - task: get_greenplum_product_files_gp[[x.gp_ver]]_latest-[[i]]
      attempts: [[attempts if attempts is not none else 1]]
      image: google-cloud-sdk-slim-image
      config:
        platform: linux
        inputs:
        - name: pxf_src
        outputs:
        params:
          SOURCE_BUCKET: ((ud/pxf/common/gpdb-concourse-resources-prod-bucket-name))
          TARGET_BUCKET: ((ud/pxf/common/gpdb-artifacts-bucket-name))
          GPDB_VERSION: [[x.gp_ver]]
          PLATFORMS: [[x.platforms | map(attribute='greenplum_platform') | unique | join('|')]]
          PKG_TYPES: [[x.platforms | map(attribute='pkg_type') | unique | join('|')]]
          VERSIONS_BEFORE_LATEST: [[i]]
          GOOGLE_CREDENTIALS: ((concourse-gcs-resources-service-account-key))
        run:
          path: pxf_src/concourse/scripts/get_product_files.bash
    {% endfor %}
